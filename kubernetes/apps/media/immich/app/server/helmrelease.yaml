---
# yaml-language-server: $schema=https://github.com/fluxcd-community/flux2-schemas/raw/main/helmrelease-helm-v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: &app immich-server
  namespace: immich
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 2.0.3
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  dependsOn:
    - name: redis
      namespace: database
  values:
    controllers:
      main:
        replicas: 1
        strategy: RollingUpdate
        annotations:
          configmap.reloader.stakater.com/reload: &configMap immich-configmap
          secret.reloader.stakater.com/reload: &secret immich-secret
        initContainers:
          init-db:
            image:
              repository: ghcr.io/haraldkoch/postgres-init
              tag: 16.1@sha256:1643b66cc670909b3363796f713570fa9a601b13bfd4b1243f231516520b83d9
            env:
              INIT_POSTGRES_HOST:
                valueFrom:
                  secretKeyRef:
                    name: immich-secret
                    key: DB_HOSTNAME
              INIT_POSTGRES_DBNAME:
                valueFrom:
                  secretKeyRef:
                    name: immich-secret
                    key: DB_DATABASE_NAME
              INIT_POSTGRES_USER:
                valueFrom:
                  secretKeyRef:
                    name: immich-secret
                    key: DB_USERNAME
              INIT_POSTGRES_PASS:
                valueFrom:
                  secretKeyRef:
                    name: immich-secret
                    key: DB_PASSWORD
            envFrom: &envFrom
              - configMapRef:
                  name: *configMap
              - secretRef:
                  name: *secret
        containers:
          main:
            image:
              repository: ghcr.io/immich-app/immich-server
              tag: v1.93.3
            command:
              - /bin/sh
            args:
              - ./start-server.sh
            envFrom: *envFrom
            # resources:
            #   requests:
            #     cpu: 100m
            #     memory: 250Mi
        pod:
          topologySpreadConstraints:
            - maxSkew: 1
              topologyKey: kubernetes.io/hostname
              whenUnsatisfiable: DoNotSchedule
              labelSelector:
                matchLabels:
                  app.kubernetes.io/name: *app
    service:
      main:
        ports:
          http:
            port: 3001

    ingress:
      main:
        enabled: true
        className: external
        annotations:
          cert-manager.io/cluster-issuer: "letsencrypt-production"
          external-dns.alpha.kubernetes.io/target: "ipv4.${SECRET_DOMAIN_2}"
          external-dns.alpha.kubernetes.io/cloudflare-proxied: "false"
          # nginx.ingress.kubernetes.io/configuration-snippet: |
          #   rewrite /api/(.*) /$1 break;
          #   set $forwarded_client_ip "";
          #   if ($http_x_forwarded_for ~ "^([^,]+)") {
          #     set $forwarded_client_ip $1;
          #   }
          #   set $client_ip $remote_addr;
          #   if ($forwarded_client_ip != "") {
          #     set $client_ip $forwarded_client_ip;
          #   }
          # nignx.ingress.kubernetes.io/force-ssl-redirect: "true"
          # nginx.ingress.kubernetes.io/proxy-body-size: "0"
          # nginx.ingress.kubernetes.io/upstream-hash-by: "$client_ip"
        hosts:
          - host: &host photos.${SECRET_DOMAIN_2}
            paths:
              - path: /
                service:
                  name: main
                  port: http
              # - path: /api
              #   service:
              #     name: immich-server
              #     port: 3001
        tls:
          - secretName: immich-ingress-tls
            hosts:
              - *host

    persistence:
      library:
        existingClaim: immich-nfs
        globalMounts:
          - path: /usr/src/app/upload
