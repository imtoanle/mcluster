---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: &app plane-app
  namespace: plane
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.0.4
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  dependsOn:
    - name: ${APP}-redis
  values:
    controllers:
      migrator:
        enabled: true
        type: job
        annotations:
          helm.sh/hook: "post-install,post-upgrade"
          helm.sh/hook-delete-policy: "hook-succeeded,before-hook-creation"
          helm.sh/hook-weight: "-1"
        replicas: 1
        containers:
          db-migrate-job:
            image:
              repository: makeplane/plane-backend
              tag: stable
              pullPolicy: Always
            command:
              - sh
              - -c
              - python manage.py wait_for_db && python manage.py migrate
            envFrom: &envFrom
              - configMapRef:
                  name: plane-config-envs
              - secretRef:
                  name: plane-secret-envs
      main:
        replicas: 1
        strategy: Recreate
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          main:
            image:
              repository: makeplane/plane-frontend
              tag: stable
              pullPolicy: Always
            command:
              - /usr/local/bin/start.sh
            args:
              - web/server.js
              - web
            envFrom: &envFrom
              - configMapRef:
                  name: plane-config-envs
              - secretRef:
                  name: plane-secret-envs
            resources:
              requests:
                cpu: 200m
                memory: 300Mi
              limits:
                cpu: 2000m
                memory: 3000Mi
      space:
        replicas: 1
        strategy: Recreate
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          main:
            image:
              repository: makeplane/plane-space
              tag: stable
              pullPolicy: Always
            command:
              - /usr/local/bin/start.sh
            args:
              - space/server.js
              - space
            envFrom: *envFrom
            resources:
              requests:
                cpu: 200m
                memory: 300Mi
              limits:
                cpu: 2000m
                memory: 3000Mi
      api:
        replicas: 1
        strategy: Recreate
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          main:
            image:
              repository: makeplane/plane-backend
              tag: stable
              pullPolicy: Always
            command:
              - ./bin/takeoff
            envFrom: *envFrom
            resources:
              requests:
                cpu: 200m
                memory: 300Mi
              limits:
                cpu: 2000m
                memory: 3000Mi
      worker:
        replicas: 1
        strategy: Recreate
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          main:
            image:
              repository: makeplane/plane-backend
              tag: stable
              pullPolicy: Always
            command:
              - ./bin/worker
            envFrom: *envFrom
            resources:
              requests:
                cpu: 300m
                memory: 500Mi
              limits:
                memory: 4000Mi
                cpu: 1000m
      beat-worker:
        replicas: 1
        strategy: Recreate
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          main:
            image:
              repository: makeplane/plane-backend
              tag: stable
              pullPolicy: Always
            command:
              - ./bin/beat
            envFrom: *envFrom
            resources:
              requests:
                cpu: 300m
                memory: 200Mi
              limits:
                memory: 4000Mi
                cpu: 1000m
    service:
      main:
        controller: main
        ports:
          http:
            port: 3000
      space:
        controller: space
        ports:
          http:
            port: 3000
      api:
        controller: api
        ports:
          http:
            port: 8000

    serviceAccount:
      create: true

    ingress:
      main:
        enabled: true
        className: external
        annotations:
          external-dns.alpha.kubernetes.io/target: "external.${SECRET_DOMAIN}"
        hosts:
          - host: &host "plane.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: main
                  port: http
              - path: /api
                pathType: Prefix
                service:
                  identifier: api
                  port: http
              - path: /spaces
                pathType: Prefix
                service:
                  identifier: space
                  port: http

        tls:
          - hosts:
              - *host
