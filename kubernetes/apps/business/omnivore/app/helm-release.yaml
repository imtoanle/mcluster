---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: &app omnivore-app
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.1.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  dependsOn:
    - name: ${APP}-redis
  values:
    controllers:
      migrate-hook:
        enabled: true
        type: job
        job:
          ttlSecondsAfterFinished: 304
        annotations:
          helm.sh/hook: "post-install,post-upgrade"
          helm.sh/hook-delete-policy: "before-hook-creation"
          helm.sh/hook-weight: "-1"
        replicas: 1
        containers:
          db-migrate-job:
            image:
              repository: ghcr.io/imtoanle/omnivore-db
              tag: 84092ddbd1dc2f82e55d85f5a28d5a190c690a36
              pullPolicy: IfNotPresent
            command: ["/bin/sh", "-c", "--"]
            args: ["yarn workspace @omnivore/db migrate"]
            env:
              NO_DEMO_USER: "1"
            envFrom:
              - secretRef:
                  name: omnivore-migrate-env-secrets

      main:
        replicas: 1
        # strategy: Recreate
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          main:
            image:
              repository: ghcr.io/imtoanle/omnivore-backend
              tag: 84092ddbd1dc2f82e55d85f5a28d5a190c690a36
              pullPolicy: IfNotPresent
            envFrom:
              - secretRef:
                  name: omnivore-env-secrets
            # resources:
            #   requests:
            #     cpu: 200m
            #     memory: 300Mi
            #   limits:
            #     cpu: 2000m
            #     memory: 3000Mi
        # initContainers:
        #   migrate-db:
        #     image:
        #       repository: sejaeger/omnivore-migrate
        #       tag: f603e4e52
        #       pullPolicy: IfNotPresent
        #     command: ["/bin/sh", "-c", "--"]
        #     args: ["./packages/db/setup.sh"]
        #     env:
        #       NO_DEMO_USER: 1
        #     envFrom:
        #       - secretRef:
        #           name: omnivore-env-secrets

      content-fetch:
        strategy: RollingUpdate
        containers:
          content-fetch:
            image:
              repository: ghcr.io/imtoanle/omnivore-content-fetch
              tag: 84092ddbd1dc2f82e55d85f5a28d5a190c690a36
              pullPolicy: IfNotPresent
            env:
              REST_BACKEND_ENDPOINT: http://omnivore-app-main.business.svc.cluster.local:8080/api
            envFrom:
              - secretRef:
                  name: omnivore-env-secrets
    service:
      main:
        controller: main
        ports:
          http:
            port: 8080
      content-fetch:
        controller: content-fetch
        ports:
          http:
            port: 8080

    ingress:
      main:
        enabled: true
        className: external
        annotations:
          external-dns.alpha.kubernetes.io/target: "external.${SECRET_DOMAIN}"
        hosts:
          - host: &host "omnivore.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: main
                  port: http
        tls:
          - hosts:
              - *host
