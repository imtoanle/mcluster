---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: &app coder-v2
  namespace: coder-v2
spec:
  interval: 30m
  chart:
    spec:
      chart: coder
      version: 2.19.1
      sourceRef:
        kind: HelmRepository
        name: coder-v2
        namespace: flux-system
  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    coder:
      nodeSelector:
        coder-v2: "true"
      env:
        - name: CODER_PG_CONNECTION_URL
          valueFrom:
            secretKeyRef:
              # You'll need to create a secret called coder-db-url with your
              # Postgres connection URL like:
              # postgres://coder:password@postgres:5432/coder?sslmode=disable
              name: app-secrets
              key: pgurl
        - name: CODER_ACCESS_URL
          value: "https://coder.${SECRET_DOMAIN_2}"
        - name: CODER_WILDCARD_ACCESS_URL
          value: "*.coder.${SECRET_DOMAIN_2}"
      envFrom:
        - secretRef:
            name: app-envs
      ingress:
        enable: true
        className: external
        host: &host "coder.${SECRET_DOMAIN_2}"
        wildcardHost: "*.coder.${SECRET_DOMAIN_2}"
        annotations:
          cert-manager.io/cluster-issuer: "letsencrypt-production"
          external-dns.alpha.kubernetes.io/target: "ipv4.${SECRET_DOMAIN_2}"
          external-dns.alpha.kubernetes.io/cloudflare-proxied: "false"
          nginx.ingress.kubernetes.io/enable-websocket: "true"
          # nginx.ingress.kubernetes.io/configuration-snippet: |
          #   proxy_http_version 1.1;
          #   proxy_set_header Upgrade $http_upgrade;
          #   proxy_set_header Connection "Upgrade";
        tls:
          enable: true
          secretName: "coder-tls-secret"
          wildcardSecretName: "wildcard-coder-tls-secret"
